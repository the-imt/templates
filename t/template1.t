#!perl -T

=head1 NAME

template1.t - Test framework for parsley list manager

=head1 SYNOPSIS

template1.t NOT to be run independantly, use the Perl test framework
CurrentVersion must be set apporpriately if you want it to find the right templates

=head1 DESCRIPTION



=head1 GENERATED BY

Some guy with a keyboard

=head1 AUTHOR

Colin Wass

=head1 LICENSE


Copyright (c) 2015-2016, Colin Wass, CFTech.ca
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
following disclaimer in the documentation and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or
promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.


=cut

BEGIN{use lib qw(../lib);}

use strict;
use warnings;
use Data::Dumper;
use Test::More qw(no_plan);
use Test::WWW::Mechanize;
use JSON;

=Test 1

Check pages and content

Should probably clean this up but it is for testing not production so ...
=cut


my $MechTester = Test::WWW::Mechanize->new( autolint => 0);
my $BaseURL = "http://localhost/";
my $CurrentVersion = "0.01";
$MechTester->get_ok($BaseURL, 'Grab the initial page');
$MechTester->base_is($BaseURL, 'Proper base found' );
my $PageLabel = $CurrentVersion . "landing";
ok($MechTester->value('pageident') eq $PageLabel, "Correct page loaded for NOT logged in landing");
$MechTester->html_lint_ok("Not logged in landing page LINT");


=Test actions								Button Name

						
Authorities:		other
					user
					admin

ActionReq:			login 					ActionReq1
					logout					ActionReq2
						
ButtonProc:			search					Button6, Button1
					adminpage				Button3
					extras					Button4
					cancel					Button15
						
AvailPages:		us		
				news
					
Templates:
	index.tt
	template1.tt
	rs.tt
	
Library Calls:


Interface:



=cut

$MechTester->form_name('index.tt');
$MechTester->click_ok('Button6', 'First Search Button');
$PageLabel = $CurrentVersion . "results";
ok($MechTester->value('pageident') eq $PageLabel, "Correct not logged in search found");
$MechTester->back();
$MechTester->field('userid', 'username');
$MechTester->field('password', 'password');
$MechTester->click_ok('ActionReq1', 'Login');
$PageLabel = $CurrentVersion . "mainpanels";
ok($MechTester->value('pageident') eq $PageLabel, "Correct landing page for logged in found");
$MechTester->html_lint_ok("Logged in landing page LINT");
$MechTester->click_ok('Button3', 'Load admin page');
$PageLabel = $CurrentVersion . "admin";
ok($MechTester->value('pageident') eq $PageLabel, "Correct admin page found");
$MechTester->html_lint_ok("Admin page LINT");
$MechTester->back();
$MechTester->click_ok('Button4', 'Load extras page');
$PageLabel = $CurrentVersion . "extras";
ok($MechTester->value('pageident') eq $PageLabel, "Correct extras page found");
$MechTester->html_lint_ok("Extras page LINT");
$MechTester->back();
$MechTester->click_ok('Button1', 'Load search page');
$PageLabel = $CurrentVersion . "results";
ok($MechTester->value('pageident') eq $PageLabel, "Correct logged in search results found");
$MechTester->back();

#New block of tests...
$MechTester->get_ok($BaseURL, 'Reset for testing next section');

#logout
$MechTester->click_ok('ActionReq2', 'Logout');
$PageLabel = $CurrentVersion . "landing";
ok($MechTester->value('pageident') eq $PageLabel, "Correct page loaded for NOT logged in landing");

=Test 2

Check Libraries and Interfaces

=cut
